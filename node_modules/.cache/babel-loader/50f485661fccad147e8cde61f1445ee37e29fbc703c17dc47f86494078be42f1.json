{"ast":null,"code":"export function createListId() {\n  return Math.floor(Math.random() * 10000000);\n}\nexport function reorder(initialArr, order, key) {\n  let newArr = initialArr.sort((a, b) => order.indexOf(a[key]) - order.indexOf(b[key]));\n  return newArr;\n}\nexport function updateOrder(source, target, arr) {\n  const sourceIdx = listOrder.indexOf(source);\n  const targetIdx = listOrder.indexOf(target);\n  if (sourceIdx < targetIdx) {\n    // if drag element from left to right, place source right after target\n    listOrder.splice(sourceIdx, 1);\n    // targetIdx is now -1\n    const newTargetIdx = listOrder.indexOf(targetListId);\n    listOrder.splice(newTargetIdx + 1, 0, sourceListId);\n    // console.log(listOrder)\n  } else {\n    // if drag element from right to left, place source right before target\n    listOrder.splice(sourceIdx, 1);\n    listOrder.splice(targetIdx, 0, sourceListId);\n    // console.log(listOrder)\n  }\n}","map":{"version":3,"names":["createListId","Math","floor","random","reorder","initialArr","order","key","newArr","sort","a","b","indexOf","updateOrder","source","target","arr","sourceIdx","listOrder","targetIdx","splice","newTargetIdx","targetListId","sourceListId"],"sources":["D:/trello/src/utils/index.js"],"sourcesContent":["export function createListId() {\r\n    return Math.floor(Math.random() * 10000000)\r\n}\r\n\r\n\r\nexport function reorder(initialArr, order, key) {\r\n    let newArr = initialArr.sort((a, b) => order.indexOf(a[key]) - order.indexOf(b[key]))\r\n    return newArr\r\n}\r\n\r\nexport function updateOrder(source, target, arr) {\r\n    const sourceIdx = listOrder.indexOf(source)\r\n    const targetIdx = listOrder.indexOf(target)\r\n    if (sourceIdx < targetIdx) {\r\n        // if drag element from left to right, place source right after target\r\n        listOrder.splice(sourceIdx, 1)\r\n        // targetIdx is now -1\r\n        const newTargetIdx = listOrder.indexOf(targetListId)\r\n\r\n        listOrder.splice(newTargetIdx + 1, 0, sourceListId)\r\n        // console.log(listOrder)\r\n    } else {\r\n        // if drag element from right to left, place source right before target\r\n        listOrder.splice(sourceIdx, 1)\r\n        listOrder.splice(targetIdx, 0, sourceListId)\r\n        // console.log(listOrder)\r\n    }\r\n}\r\n"],"mappings":"AAAA,OAAO,SAASA,YAAY,GAAG;EAC3B,OAAOC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,GAAG,QAAQ,CAAC;AAC/C;AAGA,OAAO,SAASC,OAAO,CAACC,UAAU,EAAEC,KAAK,EAAEC,GAAG,EAAE;EAC5C,IAAIC,MAAM,GAAGH,UAAU,CAACI,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKL,KAAK,CAACM,OAAO,CAACF,CAAC,CAACH,GAAG,CAAC,CAAC,GAAGD,KAAK,CAACM,OAAO,CAACD,CAAC,CAACJ,GAAG,CAAC,CAAC,CAAC;EACrF,OAAOC,MAAM;AACjB;AAEA,OAAO,SAASK,WAAW,CAACC,MAAM,EAAEC,MAAM,EAAEC,GAAG,EAAE;EAC7C,MAAMC,SAAS,GAAGC,SAAS,CAACN,OAAO,CAACE,MAAM,CAAC;EAC3C,MAAMK,SAAS,GAAGD,SAAS,CAACN,OAAO,CAACG,MAAM,CAAC;EAC3C,IAAIE,SAAS,GAAGE,SAAS,EAAE;IACvB;IACAD,SAAS,CAACE,MAAM,CAACH,SAAS,EAAE,CAAC,CAAC;IAC9B;IACA,MAAMI,YAAY,GAAGH,SAAS,CAACN,OAAO,CAACU,YAAY,CAAC;IAEpDJ,SAAS,CAACE,MAAM,CAACC,YAAY,GAAG,CAAC,EAAE,CAAC,EAAEE,YAAY,CAAC;IACnD;EACJ,CAAC,MAAM;IACH;IACAL,SAAS,CAACE,MAAM,CAACH,SAAS,EAAE,CAAC,CAAC;IAC9BC,SAAS,CAACE,MAAM,CAACD,SAAS,EAAE,CAAC,EAAEI,YAAY,CAAC;IAC5C;EACJ;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}